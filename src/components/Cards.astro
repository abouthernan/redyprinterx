---
import { Message, Notify, Calendar } from './Icons'
---

<section
  class="bg-blanco py-10 container mx-auto rounded-3xl mt-10 px-2 md:px-12 text-center lg:text-left"
  id="cards"
>
  <h3 class="text-[clamp(1.8rem,8vw,3rem)] font-medium text-marino">
    ¿Cómo trabajamos?
  </h3>
  <div
    class="grid max-w-7xl mt-12 gap-y-5 grid-cols-1 md:grid-cols-2 lg:grid-cols-3 place-items-center mx-auto"
  >
    <div
      class="border border-marino px-4 py-6 rounded-2xl w-[300px] h-52 card opacity-0 delay-100 transition-all"
    >
      <Message />
      <h4 class="font-medium pt-4 text-xl">Responda algunas preguntas</h4>
      <p class="text-sm pt-4">
        Cuéntenos un poco más sobre lo que está buscando
      </p>
    </div>

    <div
      class="border border-marino px-4 py-6 rounded-2xl w-[300px] h-52 card opacity-0 delay-200 transition-all"
    >
      <Notify />
      <h4 class="font-medium pt-4 text-xl">Recibe una respuesta</h4>
      <p class="text-sm pt-4">
        Te contactaremos para darte una respuesta a la brevedad
      </p>
    </div>

    <div
      class="border border-marino px-4 py-6 rounded-2xl w-[300px] h-52 card opacity-0 delay-300 transition-all"
    >
      <Calendar />
      <h4 class="font-medium pt-4 text-xl">Agenda una cita</h4>
      <p class="text-sm pt-4">Programa tu primera sesión con nosotros</p>
    </div>
  </div>
</section>

<script lang="javascript">
  document.addEventListener('DOMContentLoaded', () => {
    const cards = document.getElementById('cards')
    const cardsItem = document.querySelectorAll('.card')

    const callback = (entries, observer) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.remove('opacity-0')
          entry.target.classList.add(
            'animate-in',
            'slide-in-from-bottom-3',
            'duration-[2s]',
            'opacity-100'
          )
          observer.unobserve(entry.target) // Dejar de observar el elemento una vez agregada la clase
        }
      })
    }

    const callback2 = (entries, observer) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add(
            'animate-in',
            'slide-in-from-bottom-10',
            'duration-1000',
            'opacity-100'
          )
          observer.unobserve(entry.target) // Dejar de observar el elemento una vez agregada la clase
        }
      })
    }

    const observer = new IntersectionObserver(callback)
    observer.observe(cards)

    const observer2 = new IntersectionObserver(callback2)
    cardsItem.forEach(item => {
      observer2.observe(item)
    })
  })
</script>
